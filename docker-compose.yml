version: '3.8'

services:
  trader-api:
    build:
      context: .
      target: production
      dockerfile: Dockerfile
    container_name: trader-api-app
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs:rw
    restart: unless-stopped
    networks:
      - trader-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: trader-api-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - trader-network
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

networks:
  trader-network:
    driver: bridge

volumes:
  redis_data: